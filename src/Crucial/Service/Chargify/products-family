<?php namespace Crucial\Service\Chargify;

class ProductFamily extends AbstractEntity
{
    /**
     * List all products for your site
     *
     * @return Products by family id
     */
    public function listProducts($id)
    {
        $service = $this->getService();

        $response      = $service->request('product_families/'.$id.'/products', 'GET');
        $responseArray = $this->getResponseArray($response);

        if (!$this->isError()) {
            $this->_data = $this->_normalizeResponseArray($responseArray, 'product');
        } else {
            $this->_data = array();
        }

        return $this;
    }

    /**
     * List all products for your site
     *
     * @return Family and Products
     */
    public function listProductFamilies()
    {
        $service = $this->getService();

        $response      = $service->request('product_families', 'GET');
        $responseArray = $this->getResponseArray($response);

        if (!$this->isError()) {
            $this->_data = $this->_normalizeResponseArray($responseArray, 'product_family');
        } else {
            $this->_data = array();
        }

        return $this;
    }

    /**
     * List all products for your site
     *
     * @return family by id
     */
    public function ProductFamily($id)
    {
        $service = $this->getService();

        $response      = $service->request('product_families/'.$id, 'GET');
        $responseArray = $this->getResponseArray($response);

        if (!$this->isError()) {
            $this->_data = $responseArray;
        } else {
            $this->_data = array();
        }
        return $this;
    }

    /**
     * This normalizes the array for us so we can rely on a consistent structure.
     *
     * @param array $responseArray
     *
     * @return array
     */
    protected function _normalizeResponseArray($responseArray, $name)
    {
        $return = array();
        foreach ($responseArray as $prod) {
            $return[] = $prod[$name];
        }

        return $return;
    }
}
